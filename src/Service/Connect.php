<?php
/*
 * This file is part of the DocuSign package.
 *
 * (c) Unit6 <team@unit6websites.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Unit6\DocuSign\Service;

use Unit6\DocuSign;
use Unit6\DocuSign\Model;
use Unit6\DocuSign\Exception;

/**
 * DocuSign Connect Service Class.
 *
 * @author Unit6 <team@unit6websites.com>
 */
class Connect extends DocuSign\Service
{
    /**
    * Constructs the internal representation of the DocuSign Connect service.
    */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Get Connect Configuration Information
     *
     * This allows you to retrieve all the DocuSign Custom Connect
     * definitions for your account.
     *
     * Note: Connect must be enabled for your account to use this function.
     * This can only be used to set up Custom Connect configurations;
     * it cannot be used to set up Connect configurations for Box,
     * eOriginal or Salesforce.
     */
    public function getConfigurations()
    {
        # GET /accounts/{accountId}/connect
    }

    /**
     * Set Up a Connect Configuration
     *
     * This allows you to set up and configure a DocuSign Custom
     * Connect definition for your account. DocuSign Connect enables
     * the sending of real‚Äêtime data updates to external applications.
     * These updates are generated by user transactions as the envelope
     * progresses through actions to completion. Connect Service provides
     * updated information about the status of these transactions and
     * provides updates that include the actual content of document
     * form fields; however, these updates might or might not include
     * the document itself. Refer to the DocuSign Connect Service Guide
     * for more information about Connect.
     *
     * Note: Connect must be enabled for your account to use this function.
     * This can only be used to set up Custom Connect configurations;
     * it cannot be used to set up Connect configurations for Box,
     * eOriginal or Salesforce.
     */
    public function addConfiguration(Model\Connect $connect)
    {
        # POST /accounts/{accountId}/connect
    }

    /**
     * Update a Connect Configuration
     *
     * This allows you to update a DocuSign Custom Connect configuration
     * for your account.
     */
    public function updateConfiguration()
    {
        # PUT /accounts/{accountId}/connect
    }

    /**
     * Republish Connect Information for Multiple Envelopes
     *
     * This is used to republish Connect information for the set of
     * envelopes. The primary use is to republish Connect post failures
     * by including envelope IDs for the envelopes that failed to
     * post in the request. The list of envelope IDs that failed to post
     * correctly can be retrieved by getting the failure log.
     *
     * @param array   $envelopeIds An array list of envelope Ids to be republished.
     * @param boolean $synchronous If true, the system attempts to publish
     *                             failed posts again and returns the status
     *                             of the post attempt.
     */
    public function republishConfigurations(array $envelopeIds = array(), $synchronous = true)
    {
        # PUT /accounts/{accountId}/connect/envelopes/retry_queue
    }

    /**
     * Republish Connect Information for One Envelope
     *
     * This is used to republish Connect information for a single envelope.
     */
    public function republishConfiguration($envelopeId)
    {
        # PUT /accounts/{accountId}/connect/envelopes/{envelopeId}/retry_queue
    }

    /**
     * Get the Connect Failure Log
     *
     * This is used to retrieve the Connect Failure Log information.
     * It can be used to determine which envelopes failed to post, so
     * a republish request can be created.
     */
    public function getFailureLog()
    {
        # GET /accounts/{accountId}/connect/failures
    }

    /**
     * Get a Connect Failure Log Entry
     *
     * This is used to retrieve the Connect Failure Log information
     * for one entry.
     */
    public function getFailureLogEntry($failureId)
    {
        # GET /accounts/{accountId}/connect/failures/{failureId}
    }

    /**
     * Clear a Connect Failure Log Entry
     *
     * This is used to clear (remove) the Connect Failure Log information
     * for one entry.
     */
    public function clearFailureLogEntry($failureId)
    {
        # DELETE /accounts/{accountId}/connect/failures/{failureId}
    }

    /**
     * Get the Connect Log
     *
     * This retrieves a list of connect log entries for your account.
     *
     * Note: The enableLog must be set to true to enable logging. If
     * logging is not enabled, then no log entries are recorded.
     */
    public function getConnectLog()
    {
        # GET /accounts/{accountId}/connect/logs
    }

    /**
     * Clear the Connect Log
     *
     * This is used to clear (remove) the entries from the Connect Log.
     */
    public function clearConnectLog()
    {
        # DELETE /accounts/{accountId}/connect/logs
    }

    /**
     * Get One Connect Log Entry
     *
     * This retrieves one Connect log entry for your account.
     *
     * Note: The enableLog must be set to true to enable logging. If
     * logging is not enabled, then no log entries are recorded.
     */
    public function getConnectLogEntry($logId)
    {
        # GET /accounts/{accountId}/connect/logs/{logId}
    }

    /**
     * Clear One Connect Log Entry
     *
     * This is used to clear (remove) one entry from the Connect Log.
     */
    public function clearConnectLogEntry($logId)
    {
        # DELETE /accounts/{accountId}/connect/logs/{logId}
    }

    /**
     * Get a Connect Configuration Information
     *
     * This allows you to retrieve the information about one
     * DocuSign Connect configuration.
     *
     * Note: Connect must be enabled for your account to use this function.
     */
    public function getConfiguration($connectId)
    {
        # GET /accounts/{accountId}/connect/{connectId}
    }

    /**
     * Delete a Connect Configuration
     *
     * This allows you to delete one DocuSign Connect configuration.
     *
     * Note: Connect must be enabled for your account to use this function.
     */
    public function deleteConfiguration($connectId)
    {
        # DELETE /accounts/{accountId}/connect/{connectId}
    }
}